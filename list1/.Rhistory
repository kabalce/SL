?rnorm
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(include = TRUE)
# knitr::opts_chunk$set(eval = FALSE)  # TODO: remove!!!
library(ggplot2)
library(knitr)
library(reshape2)
library(sfsmisc)
set.seed(2021)
X <- as.matrix(rnorm(1000 * 950, 0, sqrt(1/1000)), nrow=1000)
X
dim(X)
?as.matrix
X <- matrix(rnorm(1000 * 950, 0, sqrt(1/1000)), nrow=1000)
dim(X)
Y <- X %*% c(rep(3, 5), rep(0, 945))
Y
Y <- X %*% c(rep(3, 5), rep(0, 945)) + rnorm(1000, 0, 1)
Y
i <- 5
1:i
lm(Y~X[, 1:i])
summary(model)
model <- lm(Y~X[, 1:i])
summary(model)
msum <- summary(model)
msum
msum$coefficients
msum$coefficients[, 4]
alpha <- 0.1
pvals <= alpha
pvals <- msum$coefficients[, 4]
pvals <= alpha
significance <- pvals <= alpha
significance
CI_len <- 2 * msum$coefficients[, 2]
CI_len
# c)
res_i <- pvals <= alpha
res_i
i_TP <- sum(res_i[2:] & (beta > 0))
res_i[2:]
res_i[2:i]
res_i[2:i] & (beta > 0)
(beta > 0)
beta > 0
beta
beta <- c(rep(3, 5), rep(0, 945))
i_TP <- sum(res_i[2:i] & (beta > 0))
i_TP
res_i
beta > 0
i_TP <- sum(res_i[2:i] & (beta[1:i] > 0))
i_TP
res_i[2:i]
i_TP <- sum(res_i[2:(i+1)] & (beta[1:i] > 0))
i_TP
res_i[2:(i+1)]
(beta[1:i] > 0)
i_FP <- sum(res_i[2:(i+1)] & (beta[1:i] == 0))
i_FP
model
msum
msum$sigma
t(X[, 1:i])
t(X[, 1:i]) %*% X
solve(t(X[, 1:i]) %*% X[, 1:i])
CI_len <- diag(msum$sigma ^ 2 * solve(t(X[, 1:i]) %*% X[, 1:i]))
CI_len
msum$sigma ^ 2 * solve(t(X[, 1:i]) %*% X[, 1:i])
CI_len <- sqrt(diag(msum$sigma ^ 2 * solve(t(X[, 1:i]) %*% X[, 1:i]))) * qt(1 - alpha / 2, 1000 - i + 1)
CI_len
?lm
model <- lm(Y~X[, 1:i] - 1)
msum <- summary(model)
pvals <- msum$coefficients[, 4]
msum
# a)
significance <- pvals <= alpha
significance
# b)
sd_val <- msum$coefficients[, 2]
sd_val
CI_len <- sqrt(diag(msum$sigma ^ 2 * solve(t(X[, 1:i]) %*% X[, 1:i]))) *
qt(1 - alpha / 2, 1000 - i + 1)
CI_len
# c)
res_i <- pvals <= alpha
res_i
i_TP <- sum(res_i[1:(i+1)] & (beta_vec[1:i] > 0))
beta_vec <- c(rep(3, 5), rep(0, 945))
i_TP <- sum(res_i[1:(i+1)] & (beta_vec[1:i] > 0))
i_FP <- sum(res_i[1:(i+1)] & (beta_vec[1:i] == 0))
i_TP <- sum(res_i[1:(i+1)] & (beta_vec[1:i] > 0))
i_TP
i_TP <- sum(res_i[1:i] & (beta_vec[1:i] > 0))
i_FP <- sum(res_i[1:i] & (beta_vec[1:i] == 0))
i_TP
i_FP
res_ii <- bonferroni(pvals, alpha)
bonferroni <- function(pvals, alpha=0.05) {
n <- length(pvals)
pvals <= (alpha / n)
}
benjamini_hochberg <- function(pvals, alpha=0.05) {
n <- length(pvals)
ord <- order(pvals)
ord2 <- order(ord)
res <-( pvals[ord] <= ((alpha * seq(n) / n)))
sapply(1:n, function(i) any(res[i:n]))[ord2]
}
res_ii <- bonferroni(pvals, alpha)
res_ii
res_iii <- benjamini_hochberg(pvals, alpha)
res_iii
iii_TP
iii_TP <- sum(res_iii[1:i] & (beta_vec[1:i] > 0))
iii_TP
iii_FP <- sum(res_iii[1:i] & (beta_vec[1:i] == 0))
iii_FP
# b)
sd_val <- mean(msum$coefficients[, 2])
sd_val
CI_len <- mean(sqrt(diag(msum$sigma ^ 2 * solve(t(X[, 1:i]) %*% X[, 1:i]))) *
qt(1 - alpha / 2, 1000 - i + 1))
CI_len
results <- data.frame()
results[[i]] <- c(i_TP, i_FP)
results[[as.character(i)]] <- c(i_TP, i_FP)
results
?data.frame
results <- data.frame(row.names = c("a", "b"))
results[[as.character(i)]] <- c(i_TP, i_FP)
results
results <- data.frame(row.names = c("sd", "CI len", "TP", "FP", "Bonf TP", "Bonf FP", "BH TP", "BH FP"))
results[[as.character(i)]] <- c(sd_val, CI_len, i_TP, i_FP, ii_TP, ii_FP, iii_TP, iii_FP)
i_TP <- sum(res_i[1:i] & (beta_vec[1:i] > 0))
i_FP <- sum(res_i[1:i] & (beta_vec[1:i] == 0))
res_ii <- bonferroni(pvals, alpha)
ii_TP <- sum(res_ii[1:i] & (beta_vec[1:i] > 0))
ii_FP <- sum(res_ii[1:i] & (beta_vec[1:i] == 0))
res_iii <- benjamini_hochberg(pvals, alpha)
iii_TP <- sum(res_iii[1:i] & (beta_vec[1:i] > 0))
iii_FP <- sum(res_iii[1:i] & (beta_vec[1:i] == 0))
results[[as.character(i)]] <- c(sd_val, CI_len, i_TP, i_FP, ii_TP, ii_FP, iii_TP, iii_FP)
results
kable(results)
kable(results, digits = 3)
kable(results, digits = 2)
alpha <- 0.1
beta_vec <- c(rep(3, 5), rep(0, 945))
X <- matrix(rnorm(1000 * 950, 0, sqrt(1/1000)), nrow=1000)
Y <- X %*% beta + rnorm(1000, 0, 1)
bonferroni <- function(pvals, alpha=0.05) {
n <- length(pvals)
pvals <= (alpha / n)
}
benjamini_hochberg <- function(pvals, alpha=0.05) {
n <- length(pvals)
ord <- order(pvals)
ord2 <- order(ord)
res <-( pvals[ord] <= ((alpha * seq(n) / n)))
sapply(1:n, function(i) any(res[i:n]))[ord2]
}
results <- data.frame(row.names = c("sd", "CI len", "TP", "FP", "Bonf TP", "Bonf FP", "BH TP", "BH FP"))
for (i in c(10, 100, 500, 950)) {
model <- lm(Y~X[, 1:i] - 1)
msum <- summary(model)
pvals <- msum$coefficients[, 4]
# a)
significance <- pvals <= alpha
# b)
sd_val <- mean(msum$coefficients[, 2])
CI_len <- mean(sqrt(diag(msum$sigma ^ 2 * solve(t(X[, 1:i]) %*% X[, 1:i]))) *
qt(1 - alpha / 2, 1000 - i + 1))
# c)
res_i <- pvals <= alpha
i_TP <- sum(res_i[1:i] & (beta_vec[1:i] > 0))
i_FP <- sum(res_i[1:i] & (beta_vec[1:i] == 0))
res_ii <- bonferroni(pvals, alpha)
ii_TP <- sum(res_ii[1:i] & (beta_vec[1:i] > 0))
ii_FP <- sum(res_ii[1:i] & (beta_vec[1:i] == 0))
res_iii <- benjamini_hochberg(pvals, alpha)
iii_TP <- sum(res_iii[1:i] & (beta_vec[1:i] > 0))
iii_FP <- sum(res_iii[1:i] & (beta_vec[1:i] == 0))
results[[as.character(i)]] <- c(sd_val, CI_len, i_TP, i_FP, ii_TP, ii_FP, iii_TP, iii_FP)
}
kable(results, digits = 3)
results <- data.frame(col.names = c("sd", "CI len", "TP", "FP", "Bonf TP", "Bonf FP", "BH TP", "BH FP"))
results <- rbind(results, c(sd_val, CI_len, i_TP, i_FP, ii_TP, ii_FP, iii_TP, iii_FP))
kable(results, digits = 3)
results
results <- data.frame()
results <- rbind(results, c(sd_val, CI_len, i_TP, i_FP, ii_TP, ii_FP, iii_TP, iii_FP))
kable(results, digits = 3)
colnames(results) <-  c("sd", "CI len", "TP", "FP", "Bonf TP", "Bonf FP", "BH TP", "BH FP")
kable(results, digits = 3)
rownames(results) <- c(10, 100, 500, 950)
rownames(results) <- c(10, 100, 500, 950)
for (i in c(10, 100, 500, 950)) {
model <- lm(Y~X[, 1:i] - 1)
msum <- summary(model)
pvals <- msum$coefficients[, 4]
# a)
significance <- pvals <= alpha
# b)
sd_val <- mean(msum$coefficients[, 2])
CI_len <- mean(sqrt(diag(msum$sigma ^ 2 * solve(t(X[, 1:i]) %*% X[, 1:i]))) *
qt(1 - alpha / 2, 1000 - i + 1))
# c)
res_i <- pvals <= alpha
i_TP <- sum(res_i[1:i] & (beta_vec[1:i] > 0))
i_FP <- sum(res_i[1:i] & (beta_vec[1:i] == 0))
res_ii <- bonferroni(pvals, alpha)
ii_TP <- sum(res_ii[1:i] & (beta_vec[1:i] > 0))
ii_FP <- sum(res_ii[1:i] & (beta_vec[1:i] == 0))
res_iii <- benjamini_hochberg(pvals, alpha)
iii_TP <- sum(res_iii[1:i] & (beta_vec[1:i] > 0))
iii_FP <- sum(res_iii[1:i] & (beta_vec[1:i] == 0))
results <- rbind(results, c(sd_val, CI_len, i_TP, i_FP, ii_TP, ii_FP, iii_TP, iii_FP))
}
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(include = TRUE)
# knitr::opts_chunk$set(eval = FALSE)  # TODO: remove!!!
library(ggplot2)
library(knitr)
library(reshape2)
library(sfsmisc)
library(stringr)
set.seed(2022)
beta_vec
X <- matrix(rnorm(1000 * 950, 0, sqrt(1/1000)), nrow=1000)
Y <- X %*% beta_vec + rnorm(1000, 0, 1)
X
Y
i_vec <- c(10, 100, 500, 950)
sapply(i_vec, function(i) sim_step(i, X, Y))
sim_step <- function(i, X, Y) {
model <- lm(Y~X[, 1:i] - 1)
msum <- summary(model)
# a
sd_val <- msum$coefficients[, 2]
# separatly
# b
CI_len <- abs(confint(model, level=0.9)[, 1] - confint(model, level=0.9)[, 2])
# c
pvals <- msum$coefficients[, 4]
res_i <- pvals <= alpha
res_ii <- bonferroni(pvals, alpha)
res_iii <- benjamini_hochberg(pvals, alpha)
true_vals <- beta_vec[1:i] > 0
FWER_i <- FWER(true_vals, res_i)
FDR_i <- FDR(true_vals, res_i)
FWER_ii <- FWER(true_vals, res_ii)
FDR_ii <- FDR(true_vals, res_ii)
FWER_iii <- FWER(true_vals, res_iii)
FDR_iii <- FDR(true_vals, res_iii)
return(list(sd = sd_val, CI = CI_len,
FWER_st = FWER_i, FDR_st = FDR_i,
FWER_bonf = FWER_ii, FDR_bonf = FDR_ii,
FWER_bh = FWER_iii, FDR_bh = FDR_iii))
}
alpha <- 0.1
beta_vec <- c(rep(3, 5), rep(0, 945))
X <- matrix(rnorm(1000 * 950, 0, sqrt(1/1000)), nrow=1000)
Y <- X %*% beta_vec + rnorm(1000, 0, 1)
bonferroni <- function(pvals, alpha=0.05) {
n <- length(pvals)
pvals < (alpha / n)
}
benjamini_hochberg <- function(pvals, alpha=0.05) {
n <- length(pvals)
ord <- order(pvals)
ord2 <- order(ord)
res <-( pvals[ord] < ((alpha * seq(n) / n)))
sapply(1:n, function(i) any(res[i:n]))[ord2]
}
FWER <- function(true_values, test_results) {
# T - reject H0, F - accept H0
as.integer(any(test_results[which(!true_values)]))
}
FDR <- function(true_values, test_results) {
sum(test_results[which(!true_values)]) / max(sum(test_results), 1)
}
power <- function(true_values, test_results) {
mean(test_results[which(true_values)])
}
sapply(i_vec, function(i) sim_step(i, X, Y))
replicate(5, simulation())
simulation <- function() {
X <- matrix(rnorm(1000 * 950, 0, sqrt(1/1000)), nrow=1000)
Y <- X %*% beta_vec + rnorm(1000, 0, 1)
i_vec <- c(10, 100, 500, 950)
sapply(i_vec, function(i) sim_step(i, X, Y))
}
replicate(5, simulation())
results <- replicate(500, simulation())
results <- replicate(50, simulation())
results[1, i, ]
i
i <- 1
results[1, i, ]
simplify2array(results[1, i, ])
dim(simplify2array(results[1, i, ]))
colMeans(simplify2array(results[1, i, ]))
rowMeans(simplify2array(results[1, i, ]))
results[3:,  i, ]
results[3:5,  i, ]
dim(results[,  i, ])
rowMeans(simplify2array(results[3:8,  i, ]))
rowMeans(results[3:8,  i, ])
results[3:8,  i, ]
dim(results[3:8,  i, ])
rowMeans(results[3:8,  i, ])
class(results[3:8,  i, ])
mean(results[3:8,  i, ])
results[3:8,  i, ]
as.numeric(results[3:8,  i, ])
mean(results[3,  i, ])
results[3,  i, ]
mean(simplify2array(results[3,  i, ]))
mean(simplify2array(results[3:4,  i, ]))
mean(simplify2array(results[3,  i, ]))
results
ggplot() + geom_hiist(x=sd_means)
ggplot() + geom_hist(x=sd_means)
ggplot() + geom_histogram(x=sd_means)
sd_means <- rowMeans(simplify2array(results[1, i, ]))
ggplot() + geom_histogram(x=sd_means)
ggplot() + geom_histogram(sd_means)
ggplot() + geom_histogram(aes(x=sd_means))
tab <- pd.DataFrame()
tab <- data.frame()
for (i in 1:length(i_vec)) {
sd_means <- rowMeans(simplify2array(results[1, i, ]))
ggplot() + geom_histogram(aes(x=sd_means))
CI_means <- rowMeans(simplify2array(results[2, i, ]))
ggplot() + geom_histogram(aes(x=CI_means))
FWERv <- mean(simplify2array(results[3,  i, ]))
FDRv <- mean(simplify2array(results[4,  i, ]))
FWERb <- mean(simplify2array(results[5,  i, ]))
FDRb <- mean(simplify2array(results[6,  i, ]))
FWERbh <- mean(simplify2array(results[7,  i, ]))
FDRbh <- mean(simplify2array(results[8,  i, ]))
tab <- rbind(tab, c(mean(sd_means), mean(CI_means), FWERv, FDRv, FWERb, FDRb,  FWERbh, FDRbh))
}
kable(tab)
tab
kable(tab, col.names = c())
kable(tab, col.names = c(), digits=2)
tab <- data.frame()
for (i in 1:length(i_vec)) {
sd_means <- rowMeans(simplify2array(results[1, i, ]))
ggplot() + geom_histogram(aes(x=sd_means))
CI_means <- rowMeans(simplify2array(results[2, i, ]))
ggplot() + geom_histogram(aes(x=CI_means))
FWERv <- mean(simplify2array(results[3,  i, ]))
FDRv <- mean(simplify2array(results[4,  i, ]))
FWERb <- mean(simplify2array(results[5,  i, ]))
FDRb <- mean(simplify2array(results[6,  i, ]))
FWERbh <- mean(simplify2array(results[7,  i, ]))
FDRbh <- mean(simplify2array(results[8,  i, ]))
tab <- rbind(tab, c(i_vec[i], mean(sd_means), mean(CI_means), FWERv, FDRv, FWERb, FDRb,  FWERbh, FDRbh))
}
kable(tab, col.names = c("sd", "CI", "FWER",  "FDR", "FWER_Bonf", "FDR_Bonf",  "FWER_BH", "FDR_BH"), digits=2)
tab
kable(tab, col.names = c("i", "sd", "CI", "FWER",  "FDR", "FWER_Bonf", "FDR_Bonf",  "FWER_BH", "FDR_BH"), digits=2)
ggplot() + geom_histogram(aes(x=sd_means)) + labs(title = str_c("Standard Deviation Histogram for i = ",  as.character(vec_i[i])))
ggplot() + geom_histogram(aes(x=sd_means)) + labs(title = str_c("Standard Deviation Histogram for i = ",  as.character(i_vec[i])))
